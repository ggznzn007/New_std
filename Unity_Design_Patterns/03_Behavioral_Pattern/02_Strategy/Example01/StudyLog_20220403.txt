Strategy Pattern이란?
인터페이스 & 다형성과 관련있다.
여러 알고리즘을 하나의 추상적인 접근점(인터페이스)을 만들어 접근점에서
알고리즘이 서로 교환 가능하도록 하는 패턴
동일 목적 알고리즘의 선택 적용

인터페이스
기능에 대한 선언
구현과의 분리
기능들을 구현하진 않고 프로토타입만 명시한다.
여러가지 기능을 사용하기 위한 단일 통로

예시
워드 문서에서 프린터, 폰트 사용
‘프린트’ 버튼만 누르면 어떤 종류의 프린터든간에 알아서 각자에 맞게 프린트함
똑같은 문장을 써도 폰트에 따라 모양은 다르게 나타남
정수 배열에 대해 사용하는 정렬 알고리즘
게임 캐릭터의 무기 사용
인터페이스에 무기에 대한 추상적인 기능 이름들만 명시해주면
 각 무기들은 이 인터페이스를 상속받아 각자 무기 특성에 맞게 알아서
 기능들을 구현하면 된다.
또한 부모인 인터페이스 이름 하나로 한방에 그 아래 자식들을 관리할 수 있다.

Chapter 3. 전략 패턴(Strategy Pattern)
 Date: 2020.07.09    Updated: 2020.07.09
 카테고리: Design Pattern

 태그: Design Pattern Unity Game Engine

 목차
Chapter 3. Strategy Pattern
🔔 Strategy Pattern이란?
인터페이스
인터페이스 클래스 구현 in C#
🔔 예제 1 : 텍스트로 무기 교체
구조
📜IWeapon.cs
📜Arrow.cs
📜Bullet.cs
📜Missile.cs
📜MyWeapon.cs
📜WeaponManager.cs
🔔 예제 2 : 직접 무기 교체
구조
📜IWeapon.cs
📜Arrow.cs
📜Bullet.cs
📜Missile.cs
📜BulletMove.cs
📜WeaponManager.cs
인프런에 있는 이재환님의 강의 게임 디자인 패턴 with Unity 를 듣고 정리한 필기입니다. 😀

Chapter 3. Strategy PatternPermalink
🔔 Strategy Pattern이란?Permalink
인터페이스 & 다형성과 관련있다.

여러 알고리즘을 하나의 추상적인 접근점(인터페이스)을 만들어 접근점에서 알고리즘이 서로 교환 가능하도록 하는 패턴
동일 목적 알고리즘의 선택 적용


인터페이스Permalink
기능에 대한 선언
구현과의 분리
기능들을 구현하진 않고 프로토타입만 명시한다.
여러가지 기능을 사용하기 위한 단일 통로
예시
워드 문서에서 프린터, 폰트 사용
‘프린트’ 버튼만 누르면 어떤 종류의 프린터든간에 알아서 각자에 맞게 프린트함
똑같은 문장을 써도 폰트에 따라 모양은 다르게 나타남
정수 배열에 대해 사용하는 정렬 알고리즘
게임 캐릭터의 무기 사용
인터페이스에 무기에 대한 추상적인 기능 이름들만 명시해주면 각 무기들은 이 인터페이스를 상속받아 각자 무기 특성에 맞게 알아서 기능들을 구현하면 된다.

또한 부모인 인터페이스 이름 하나로 한방에 그 아래 자식들을 관리할 수 있다. 다형성

인터페이스 클래스 구현 in C#
클래스 이름 앞엔 대문자 I를 붙여주어야 한다.
멤버 변수를 가질 수 없다.
멤버 함수들은 전부 프로토타입만 명시해주며 구현하지 않는다.
자식 클래스들은 인터페이스에 있는 모든 함수들은 무조건 다 오버라이딩 해야 한다.

예제
무기를 사용하는 객체가 있다
무기의 인터페이스만 추상으로 구현해놓고 버튼으로 혹은 다른 동작으로 
무기의 종류가 바뀜에 따라서 프리팹화 시켜놓은 무기가 해당무기에 따라 스크립트가
바뀌면서 해당무기가 발사된다.
실시간으로 게임 도중 프리팹을 복사하여 오브젝트로 생성

구조

📜IWeapon.cs 인터페이스
Shoot(GameObject obj) 발사 추상메소드 

Arrow 프리팹 (호크아이)
📜Arrow.cs 상속
Shoot(GameObject obj) 오버라이딩
📜BulletMove.cs
총알 이동
update 함수

Bullet 프리팹 (블랙위도우)
📜Bullet.cs 상속
Shoot(GameObject obj) 오버라이딩
📜BulletMove.cs
총알 이동
update 함수

Missile 프리팹 (아이언맨)
📜Missile.cs 상속
Shoot(GameObject obj) 오버라이딩
📜BulletMove.cs
총알 이동
update 함수

BattleShip 오브젝트 (무기를 발사하는 객체)
📜WeaponManager.cs
무기 교체
슬롯에 각각 Arrow 프리팹, Bullet 프리팹, Missile 프리팹 연결

게임이 실행되면
버튼에 따라 📜Arrow.cs, 📜Bullet.cs, 📜Missile.cs 중 하나씩 붙는다.
게임 시작시엔 📜Bullet.cs가 기본적으로 붙어있다.
